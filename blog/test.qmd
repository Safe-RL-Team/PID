---
title: "Uncertainty-Based Offline Reinforcement Learning with Diversified Q-Ensemble"
description: "based on [@an2021edac]"
date: today  # TODO: change to date of publication
author:
    - name: Julian Dralle
      affiliation: TU Berlin
    - name: Jonas Loos
      affiliation: TU Berlin
bibliography: references.bib
execute:
  enabled: true
  echo: false
  output: true
---

```{=html}
<details>
<summary>Click to expand</summary>
```

```{ojs #fig-halfcheetah-slider}
viewof angles = Inputs.form({
    back1:  Inputs.range([-1,1], {value:0, step:0.1, label: "angle back 1:"}),
    back2:  Inputs.range([-1,1], {value:0, step:0.1, label: "angle back 2:"}),
    back3:  Inputs.range([-1,1], {value:0, step:0.1, label: "angle back 3:"}),
    front1: Inputs.range([-1,1], {value:0, step:0.1, label: "angle front 1:"}),
    front2: Inputs.range([-1,1], {value:0, step:0.1, label: "angle front 2:"}),
    front3: Inputs.range([-1,1], {value:0, step:0.1, label: "angle front 3:"}),
})

leg_length = 0.4;
foot_length = 0.2;

back1 = angles.back1 + 0.6;
back2 = back1 + angles.back2 - 1.3;
back3 = back2 + angles.back3 + 1.6;
front1 = angles.front1 - 0.4;
front2 = front1 + angles.front2 + 0.8;
front3 = front2 + angles.front3 + 0.3;

joint_back1 = ({x: -0.5, y: 0.4});
joint_back2 = ({x: joint_back1.x + Math.sin(back1) * 0.40, y: joint_back1.y - Math.cos(back1) * 0.40});
joint_back3 = ({x: joint_back2.x + Math.sin(back2) * 0.40, y: joint_back2.y - Math.cos(back2) * 0.36});
joint_back4 = ({x: joint_back3.x + Math.sin(back3) * 0.16, y: joint_back3.y - Math.cos(back3) * 0.18});
joint_front1 = ({x: 0.5, y: 0.4});
joint_front2 = ({x: joint_front1.x + Math.sin(front1) * 0.33, y: joint_front1.y - Math.cos(front1) * 0.3});
joint_front3 = ({x: joint_front2.x + Math.sin(front2) * 0.30, y: joint_front2.y - Math.cos(front2) * 0.28});
joint_front4 = ({x: joint_front3.x + Math.sin(front3) * 0.15, y: joint_front3.y - Math.cos(front3) * 0.16});

line_conf = ({x: 'x', y: 'y', strokeWidth: 15});
line_conf1 = ({...line_conf, stroke: '#91775b'});
line_conf2 = ({...line_conf, stroke: '#956f6e'});
Plot.plot({
    marks: [
        Plot.line([joint_back1, joint_front1], line_conf1),  // back
        Plot.line([joint_front1, {x: joint_front1.x+0.2, y: joint_front1.y+0.2}], line_conf1),  // head
        Plot.line([joint_back1, joint_back2], line_conf1),  // back leg 1
        Plot.line([joint_back2, joint_back3], line_conf2),  // back leg 2
        Plot.line([joint_back3, joint_back4], line_conf2),  // back foot
        Plot.line([joint_front1, joint_front2], line_conf1),  // front leg 1
        Plot.line([joint_front2, joint_front3], line_conf2),  // front leg 2
        Plot.line([joint_front3, joint_front4], line_conf2),  // front foot
    ],
    width: 600,
    height: 400,
    x: {
        domain: [-1,1],
        axis: null,
    },
    y: {
        domain: [-2/3,2/3],
        axis: null,
    },
});

```

```{=html}
</details>
```
